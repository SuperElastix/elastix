name: ElastixPublish

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      matrix:
        os: [ubuntu-22.04]
        cuda-version: [cu118, cu126, cu128]
        include:
          - cuda-version: cu118
            os: ubuntu-22.04
            cuda_toolkit_version: '11.8.0'
            libtorch-cuda-url: https://download.pytorch.org/libtorch/cu118/libtorch-cxx11-abi-shared-with-deps-2.7.0%2Bcu118.zip
            itk-git-tag: "v5.4.1"
            c-compiler: "gcc"
            cxx-compiler: "g++"
            cmake-build-type: "Release"
            libs:
              - elastix-build/bin/libANNlib-5.2.so
              - elastix-build/bin/libANNlib-5.2.so.1
          - cuda-version: cu126
            os: ubuntu-22.04
            cuda_toolkit_version: '12.6.1'
            libtorch-cuda-url: https://download.pytorch.org/libtorch/cu126/libtorch-cxx11-abi-shared-with-deps-2.7.0%2Bcu126.zip
            itk-git-tag: "v5.4.1"
            c-compiler: "gcc"
            cxx-compiler: "g++"
            cmake-build-type: "Release"
            libs:
              - elastix-build/bin/libANNlib-5.2.so
              - elastix-build/bin/libANNlib-5.2.so.1
          - cuda-version: cu128
            os: ubuntu-22.04
            cuda_toolkit_version: '12.8.1'
            libtorch-cuda-url: https://download.pytorch.org/libtorch/cu128/libtorch-cxx11-abi-shared-with-deps-2.7.0%2Bcu128.zip
            itk-git-tag: "v5.4.1"
            c-compiler: "gcc"
            cxx-compiler: "g++"
            cmake-build-type: "Release"
            libs:
              - elastix-build/bin/libANNlib-5.2.so
              - elastix-build/bin/libANNlib-5.2.so.1
    steps:
      - name: Clone elastix
        uses: actions/checkout@v3

      - name: Make directory structure
        run: |
          items=(*)
          mkdir elastix-source
          mv ${items[*]} elastix-source
          mv .editorconfig elastix-source
          mv .clang-format elastix-source
          mv elastix-source/Dockerfile .
        shell: bash

      - name: Download and extract libtorch
        uses: ./.github/actions/download_libtorch
        with:
          libtorch_url: ${{ matrix.libtorch-cuda-url }}

      - name: Clone and build ITK
        uses: ./.github/actions/build_itk
        with:
          itk-git-tag: ${{ matrix.itk-git-tag }}
          c-compiler: ${{ matrix.c-compiler }}
          cxx-compiler: ${{ matrix.cxx-compiler }}
          cmake-build-type: ${{ matrix.cmake-build-type }}
          vcvars: ${{ matrix.vcvars64 }}

      - uses: Jimver/cuda-toolkit@v0.2.23
        id: cuda-toolkit
        with:
          cuda: ${{ matrix.cuda_toolkit_version }}
          sub-packages: '["toolkit"]'
          method: 'network'

      - name: Build elastix
        uses: ./.github/actions/build_elastix
        with:
          c-compiler: ${{ matrix.c-compiler }}
          cxx-compiler: ${{ matrix.cxx-compiler }}
          cmake-build-type: ${{ matrix.cmake-build-type }}
          vcvars: ${{ matrix.vcvars64 }}

      - name: Publish
        uses: ./.github/actions/publish
        with:
          libs: ${{ join(matrix.libs, ' ') }}
          upload-name: ${{ matrix.os }}-${{ matrix.cuda-version }}
          docker-username: ${{ secrets.DOCKER_HUB_USERNAME }}
          docker-password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
