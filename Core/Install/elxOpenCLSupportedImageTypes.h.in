/*=========================================================================
 *
 *  Copyright UMC Utrecht and contributors
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0.txt
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *=========================================================================*/
#ifndef elxOpenCLSupportedImageTypes_h
#define elxOpenCLSupportedImageTypes_h

#include "itkMacro.h"
#include "TypeList.h"

namespace elastix
{
  // elastix OpenCL image supported dimensions,
  // where elastix 1D images are not supported in elastix by default
  struct OpenCLImageDimentions
  {
    itkStaticConstMacro( Support1D, bool, false );
    @UserDefinedSupportedDimensions@
  };

  // CMake will substitute the following line with user-defined image types:
  @UserDefinedSupportedImageTypes@

  // Create typelist with all types from 2D and 3D
  typedef typelist::Append<OpenCLImageTypes2D, OpenCLImageTypes3D>::Type OpenCLAllImageTypes;

  // Remove duplicates resulting in the final OpenCL supported types
  typedef typelist::NoDuplicates<OpenCLAllImageTypes>::Type OpenCLImageTypes;

} // end namespace elastix

#endif // end #ifndef elxOpenCLSupportedImageTypes_h
