# .pre-commit-config.yaml
# for details see https://pre-commit.com
# for list of available hooks see https://pre-commit.com/hooks.html
#
# Preclude commits that do not conform to various criteria.
#
# If a pre-commit check must be skipped then use: `SKIP=check_id git commit` Where `check_id` is the id of the check to
# be skipped such as `black`.

fail_fast: true
default_stages: [pre-commit]
repos:
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v5.0.0
  hooks:
   - id: check-added-large-files
     args: ['--maxkb=200']
   - id: check-ast
   - id: check-case-conflict
   - id: check-illegal-windows-names
   - id: check-json
   - id: check-merge-conflict
     args: ['--assume-in-merge']
   - id: check-toml
   - id: check-vcs-permalinks
   - id: check-xml
   - id: check-yaml
   - id: check-shebang-scripts-are-executable
   - id: debug-statements
   - id: destroyed-symlinks
   - id: detect-private-key
   - id: end-of-file-fixer
     exclude: "\\.(md5|sha|sha512|svg|vtk|vtp)$|^Resources\\/[^\\/]+\\.h$|\\/ColorFiles\\/.+\\.txt$|Data\\/Input\\/.+$|\\/ThirdParty\\/|\\/Data\\/"
   - id: forbid-new-submodules
   - id: forbid-submodules
   - id: mixed-line-ending
     exclude: "\\.(sha|sha512|svg|vtk|vtp)$|\\/ThirdParty\\/|\\/Data\\/"
   - id: name-tests-test
     args: ['--pytest-test-first']
   - id: no-commit-to-branch
     args: ['--branch','dashboard','--branch','python-builds','--branch','release','--branch','hooks','--branch', 'main','--branch','master','--pattern','release-*']
   - id: trailing-whitespace
     exclude: "\\.(sha|sha512|svg|vtk|vtp)$|\\/ThirdParty\\/|\\/Data\\/"
- repo: https://github.com/pre-commit/mirrors-clang-format
  rev: v19.1.4
  hooks:
  - id: clang-format
    args: ['--style=file']
    files: '\.(c|cc|h|cxx|hxx)$'
    exclude: "\\/ThirdParty\\/|\\/Data\\/"
